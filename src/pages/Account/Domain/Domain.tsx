"use client";

import NotificationOverlay from "../../../components/ui/noti";
import { Button } from "../../../components/ui/button";
import useDomain from "./useDomain";
import { LoadingOverlay } from "../../../components/ui/loading";

const Domain = () => {
  const {
    domain,
    setDomain,
    showError,
    errorMessage,
    handleContinue,
    setShowError,
    type,
    setType,
    changeDomain,
    message,
    setMessage,
    newDomain,
    loading,
    success,
  } = useDomain();
  return (
    <div className="w-full flex flex-col gap-2 sm:gap-3 lg:gap-4 bg-[#F3F3F1] pb-6 sm:pb-8 lg:pb-10 pt-4 sm:pt-5 lg:pt-6 mt-[3vh] h-full overflow-y-auto text-center px-4 sm:px-6 lg:px-8">
      <NotificationOverlay
        visible={message !== ""}
        message={message}
        onClose={() => setMessage("")}
        type={success}
      />
      <LoadingOverlay visible={loading} />
      <h1 className="text-2xl sm:text-3xl lg:text-[2.5rem] font-bold bg-gradient-to-r from-green1 to-green2 bg-clip-text text-transparent px-4">
        Tùy chỉnh tên miền
      </h1>
      <p className="text-base sm:text-lg lg:text-xl bg-gradient-to-r from-green1 to-green2 bg-clip-text text-transparent px-4">
        Tạo cài đặt tên miền cho BioLinker của bạn
      </p>
      {type === "" && (
        <div className="w-full min-h-[170px] gap-4 sm:gap-5 lg:gap-6 text-white flex flex-col sm:flex-row justify-center items-center mt-4 sm:mt-5 lg:mt-6 animate-fadeInUp px-4">
          <div
            className="bg-gradient-to-r w-full sm:w-[45%] lg:w-[15%] min-w-[260px] from-green1 to-green2 rounded-2xl p-4 sm:p-5 lg:p-6 flex flex-col items-center gap-2 border-2 hover:border-blue-500 cursor-pointer"
            onClick={() => {
              newDomain("");
            }}
          >
            <span className="w-[15%] sm:w-[18%] lg:w-[20%]">
              <svg
                width="55"
                height="55"
                viewBox="0 0 55 54"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                className="w-full h-full"
              >
                <path
                  d="M27.0898 0C12.1777 0 0.0898438 12.0879 0.0898438 27C0.0898438 41.9121 12.1777 54 27.0898 54C42.0019 54 54.0898 41.9121 54.0898 27C54.0898 12.0879 42.0019 0 27.0898 0ZM45.7684 16.2H37.0879C36.6846 13.1619 36.1758 10.1388 35.5624 7.1361C39.8495 8.98305 43.428 12.1611 45.7684 16.2ZM29.8276 5.5944C30.0112 6.5448 30.8725 11.097 31.5691 16.2H22.6105C23.3071 11.097 24.1684 6.5448 24.352 5.5944C25.2511 5.4783 26.161 5.4 27.0898 5.4C28.0186 5.4 28.9285 5.4783 29.8276 5.5944ZM32.4898 27C32.4898 28.6146 32.3737 30.4722 32.1955 32.4H21.9841C21.8059 30.4722 21.6898 28.6146 21.6898 27C21.6898 25.3854 21.8059 23.5278 21.9841 21.6H32.1955C32.3737 23.5278 32.4898 25.3854 32.4898 27ZM18.6172 7.1361C18.0039 10.1388 17.4951 13.1619 17.0917 16.2H8.41124C10.7517 12.1611 14.3302 8.98305 18.6172 7.1361ZM6.19994 21.6H16.5166C16.3789 23.4036 16.2898 25.2288 16.2898 27C16.2898 28.7712 16.3789 30.5964 16.5193 32.4H6.19994C5.75174 30.6693 5.48984 28.8684 5.48984 27C5.48984 25.1316 5.75444 23.3307 6.19994 21.6ZM8.41124 37.8H17.0917C17.5993 41.6448 18.2257 44.955 18.6172 46.8639C14.3302 45.017 10.7517 41.8389 8.41124 37.8ZM24.352 48.4056C23.6802 44.886 23.0996 41.3496 22.6105 37.8H31.5691C31.079 41.3494 30.4983 44.8858 29.8276 48.4056C28.9285 48.5217 28.0186 48.6 27.0898 48.6C26.161 48.6 25.2511 48.5217 24.352 48.4056ZM35.5624 46.8639C35.9539 44.955 36.5803 41.6448 37.0879 37.8H45.7684C43.428 41.8389 39.8495 45.017 35.5624 46.8639ZM47.9797 32.4H37.663C37.8007 30.5964 37.8898 28.7712 37.8898 27C37.8898 25.2288 37.8007 23.4036 37.6603 21.6H47.977C48.4252 23.3307 48.6898 25.1316 48.6898 27C48.6898 28.8684 48.4279 30.6693 47.9797 32.4Z"
                  fill="white"
                />
              </svg>
            </span>
            <h1 className="text-lg sm:text-xl font-bold">Tên miền mới</h1>
            <p className="text-xs sm:text-sm">Mua tên miền mới</p>
          </div>
          <div
            className="bg-gradient-to-r w-full sm:w-[45%] lg:w-[15%] min-w-[260px] from-green1 to-green2 rounded-2xl p-4 sm:p-5 lg:p-6 flex flex-col items-center gap-2 border-2 hover:border-blue-500 cursor-pointer"
            onClick={() => {
              changeDomain("");
            }}
          >
            <span className="w-[15%] sm:w-[18%] lg:w-[20%]">
              <svg
                width="55"
                height="55"
                viewBox="0 0 65 65"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                className="w-full h-full"
              >
                <path
                  d="M60.4476 6.8904C60.9905 7.83001 61.4812 8.72785 61.9197 9.58393C62.3582 10.44 62.7549 11.3065 63.1098 12.1835C63.4648 13.0604 63.7154 13.9687 63.8615 14.9083C64.0077 15.8479 64.1016 16.8919 64.1434 18.0403C64.1434 19.6899 63.9346 21.2767 63.517 22.801C63.0994 24.3252 62.4939 25.7659 61.7004 27.1231C60.907 28.4803 59.957 29.7018 58.8503 30.7876C57.7437 31.8733 56.5222 32.8129 55.1859 33.6064C53.8496 34.3998 52.4193 35.0053 50.895 35.4229C49.3708 35.8405 47.7735 36.0598 46.1031 36.0807C45.6228 36.0807 45.1426 36.0598 44.6623 36.018C44.1821 35.9763 43.6914 35.9136 43.1903 35.8301L17.9464 61.074C16.9441 62.0763 15.8062 62.8384 14.5325 63.3604C13.2588 63.8824 11.912 64.1434 10.4922 64.1434C9.05149 64.1434 7.69428 63.872 6.4206 63.3291C5.14692 62.7862 4.04028 62.0345 3.10068 61.074C2.16108 60.1136 1.4094 58.9965 0.845641 57.7228C0.28188 56.4491 0 55.0919 0 53.6512C0 52.2522 0.261 50.9159 0.783001 49.6422C1.305 48.3686 2.06712 47.2201 3.06936 46.197L28.3133 20.9531C28.2298 20.4729 28.1671 19.9926 28.1254 19.5124C28.0836 19.0321 28.0627 18.5415 28.0627 18.0403C28.0627 16.3908 28.2715 14.8039 28.6891 13.2797C29.1067 11.7554 29.7123 10.3147 30.5057 8.95753C31.2991 7.60033 32.2492 6.37884 33.3558 5.29308C34.4625 4.20732 35.6839 3.26772 37.0203 2.47428C38.3566 1.68084 39.7869 1.07532 41.3111 0.65772C42.8354 0.24012 44.4327 0.02088 46.1031 0C47.2306 0 48.2642 0.08352 49.2038 0.25056C50.1434 0.4176 51.0621 0.6786 51.9599 1.03356C52.8578 1.38852 53.7243 1.7748 54.5595 2.1924C55.3947 2.61 56.2925 3.11112 57.253 3.69576L44.9129 16.0359L48.1076 19.2305L60.4476 6.8904ZM46.1031 32.0717C48.0449 32.0717 49.8615 31.7063 51.5528 30.9755C53.244 30.2447 54.7265 29.2425 56.0002 27.9688C57.2739 26.6951 58.2761 25.2126 59.0069 23.5213C59.7377 21.8301 60.1136 20.0031 60.1344 18.0403C60.1344 16.5161 59.8839 15.0441 59.3828 13.6242L48.1076 24.8681L39.2753 16.0359L50.5192 4.76064C49.0994 4.25952 47.6273 4.00896 46.1031 4.00896C44.1612 4.00896 42.3447 4.37436 40.6534 5.10516C38.9622 5.83596 37.4797 6.83812 36.2059 8.11164C34.9322 9.38516 33.93 10.8677 33.1992 12.5589C32.4684 14.2502 32.1031 16.0667 32.1031 18.0086C32.1031 18.489 32.124 18.9693 32.1657 19.4495C32.2075 19.9298 32.2702 20.4205 32.3537 20.9215L57.5977 -4.32244C58.6 -5.32468 59.7379 -6.08676 61.0116 -6.60876C62.2853 -7.13076 63.6321 -7.39176 65.0519 -7.39176C66.4926 -7.39176 67.8498 -7.12036 69.1235 -6.57756C70.3972 -6.03476 71.5038 -5.28316 72.4434 -4.32276C73.383 -3.36236 74.1347 -2.24524 74.6985 -0.971559C75.2622 0.302121 75.5441 1.65932 75.5441 3.1C75.5441 4.499 75.2831 5.83524 74.7611 7.10892C74.2391 8.3826 73.477 9.52052 72.4748 10.5227L47.2308 35.7667C47.7319 35.8502 48.2226 35.9129 48.7028 35.9546C49.1831 35.9964 49.6633 36.0173 50.1436 36.0173C52.0854 36.0173 53.902 35.6519 55.5932 34.9211C57.2845 34.1903 58.767 33.1881 60.0407 31.9144C61.3144 30.6407 62.3166 29.1582 63.0474 27.4669C63.7782 25.7757 64.1436 23.9591 64.1436 22.0173C64.1436 20.4931 63.893 19.0211 63.3919 17.6012L52.1167 28.8451L43.2845 20.0129L54.5284 8.76904C53.1085 8.26792 51.6365 8.01736 50.1123 8.01736C48.1705 8.01736 46.354 8.38276 44.6627 9.11356C42.9715 9.84436 41.489 10.8465 40.2153 12.1202C38.9416 13.3939 37.9394 14.8764 37.2086 16.5677C36.4778 18.2589 36.1124 20.0755 36.1124 22.0173C36.1124 22.4976 36.1333 22.9778 36.175 23.4581C36.2168 23.9383 36.2795 24.429 36.363 24.93L11.119 50.174C10.1168 51.1762 8.97888 51.9383 7.7052 52.4603C6.43152 52.9823 5.08472 53.2433 3.6648 53.2433C2.22408 53.2433 0.866879 52.9719 -0.406801 52.4291C-1.68048 51.8863 -2.78712 51.1346 -3.72672 50.1742C-4.66632 49.2138 -5.418 48.0967 -5.98176 46.823C-6.54552 45.5493 -6.8274 44.1921 -6.8274 42.7514C-6.8274 41.3524 -6.5664 40.0161 -6.0444 38.7424C-5.5224 37.4687 -4.76032 36.3308 -3.75808 35.3286L21.486 10.0846C21.4025 9.60436 21.3398 9.1241 21.298 8.64384C21.2563 8.16358 21.2354 7.67284 21.2354 7.17172C21.2354 5.52212 21.4442 3.93524 21.8618 2.41108C22.2794 0.88692 22.885 -0.553679 23.6784 -1.91088C24.4718 -3.26808 25.4219 -4.48956 26.5285 -5.57532C27.6352 -6.66108 28.8566 -7.60068 30.193 -8.39412C31.5293 -9.18756 32.9596 -9.79308 34.4838 -10.2107C36.0081 -10.6283 37.6054 -10.8475 39.2758 -10.8683C40.4033 -10.8683 41.4369 -10.785 42.3765 -10.6179C43.3161 -10.4509 44.2348 -10.1899 45.1326 -9.83492C46.0305 -9.47996 46.897 -9.09368 47.7322 -8.67608C48.5674 -8.25848 49.4652 -7.75736 50.4257 -7.17272L38.0856 5.16736L41.2803 8.36204L53.6203 -3.97804C54.1632 -3.03844 54.6539 -2.1406 55.0924 -1.28452C55.5309 -0.42844 55.9276 0.438001 56.2826 1.31496C56.6375 2.19192 56.8881 3.10024 57.0343 4.03992C57.1804 4.9796 57.2743 6.02356 57.3161 7.17172C57.3161 8.82132 57.1073 10.4082 56.6897 11.9324C56.2721 13.4566 55.6666 14.8973 54.8731 16.2545C54.0797 17.6117 53.1297 18.8332 52.023 19.919C50.9164 21.0047 49.6949 21.9443 48.3585 22.7378C47.0222 23.5312 45.5919 24.1367 44.0677 24.5543C42.5434 24.9719 40.9461 25.1912 39.2758 25.212C38.7955 25.212 38.3153 25.1912 37.835 25.1494C37.3548 25.1077 36.8641 25.045 36.363 24.9615L11.119 50.2054C10.1168 51.2077 8.97888 51.9697 7.7052 52.4917C6.43152 53.0137 5.08472 53.2747 3.6648 53.2747C2.22408 53.2747 0.866879 53.0033 -0.406801 52.4605C-1.68048 51.9177 -2.78712 51.166 -3.72672 50.2056C-4.66632 49.2452 -5.418 48.1281 -5.98176 46.8544C-6.54552 45.5807 -6.8274 44.2235 -6.8274 42.7828C-6.8274 41.3838 -6.5664 40.0475 -6.0444 38.7738C-5.5224 37.5001 -4.76032 36.3622 -3.75808 35.36L21.486 10.116C21.4025 9.63576 21.3398 9.1555 21.298 8.67524C21.2563 8.19498 21.2354 7.70424 21.2354 7.20312C21.2354 5.55352 21.4442 3.96664 21.8618 2.44248C22.2794 0.91832 22.885 -0.522279 23.6784 -1.87948C24.4718 -3.23668 25.4219 -4.45816 26.5285 -5.54392C27.6352 -6.62968 28.8566 -7.56928 30.193 -8.36272C31.5293 -9.15616 32.9596 -9.76168 34.4838 -10.1793C36.0081 -10.5969 37.6054 -10.8161 39.2758 -10.8369C40.4033 -10.8369 41.4369 -10.7536 42.3765 -10.5865C43.3161 -10.4195 44.2348 -10.1585 45.1326 -9.80352C46.0305 -9.44856 46.897 -9.06228 47.7322 -8.64468C48.5674 -8.22708 49.4652 -7.72596 50.4257 -7.14132L38.0856 5.19876L41.2803 8.39344L53.6203 -3.94664Z"
                  fill="white"
                />
              </svg>
            </span>
            <h1 className="text-lg sm:text-xl font-bold">Tên miền có sẵn</h1>
            <p className="text-xs sm:text-sm">Sử dụng tên miền có sẵn</p>
          </div>
        </div>
      )}
      {type === "new" && (
        <div className="w-full max-w-[95%] sm:max-w-[80%] lg:max-w-[50%] space-y-6 sm:space-y-7 lg:space-y-8 animate-fadeInUp mx-auto px-4">
          {/* Input Fields */}
          <div className="space-y-4 items-center min-h-[20%] h-full mt-4 sm:mt-5 lg:mt-6">
            <div className="flex flex-col sm:flex-row justify-start space-x-0 gap-3 sm:gap-4">
              {/* Prefix */}
              <div className="bg-white border border-green-500 rounded-full px-4 sm:px-5 lg:px-6 py-2 text-base sm:text-lg lg:text-xl text-center sm:text-left h-auto sm:h-[52%] text-green-500">
                biolinker/
              </div>
              {/* Username Input */}
              <div className="flex-1">
                <input
                  type="text"
                  placeholder="Domain"
                  value={domain}
                  onChange={(e) => {
                    setDomain(e.target.value);
                    if (showError && e.target.value.trim() !== "") {
                      setShowError(false);
                    }
                  }}
                  className={`flex-1 w-full bg-white border rounded-full px-3 sm:px-4 py-2 text-base sm:text-lg lg:text-xl placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-green1 focus:border-green1 ${
                    showError ? "border-red-500" : "border-green-500"
                  }`}
                />
                {showError && (
                  <span className="text-red-500 text-sm sm:text-base text-start pl-2 pt-2 block">
                    {errorMessage}
                  </span>
                )}
              </div>
            </div>
            {/* Continue Button */}
            <div className="flex flex-col sm:flex-row justify-center h-auto sm:h-[70%] items-center w-full gap-3 sm:gap-4 mt-6 sm:mt-8 lg:mt-10">
              <Button
                onClick={() => setType("")}
                className="w-full sm:w-[45%] lg:w-[35%] h-12 sm:h-13 lg:h-14 bg-gradient-to-r from-green1 to-green2 text-white text-base sm:text-lg lg:text-xl rounded-full"
              >
                Quay lại
              </Button>
              <Button
                onClick={handleContinue}
                className="w-full sm:w-[45%] lg:w-[35%] h-12 sm:h-13 lg:h-14 bg-gradient-to-r from-green1 to-green2 text-white text-base sm:text-lg lg:text-xl rounded-full"
                disabled={domain.trim() === ""}
              >
                Thay đổi
              </Button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};
export default Domain;
